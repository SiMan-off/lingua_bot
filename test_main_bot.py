#!/usr/bin/env python3
"""Diagnostic script for the main bot"""

import asyncio
import os
import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent))

from aiogram import Bot, Dispatcher
from dotenv import load_dotenv

# Import handlers
from bot.handlers import base, callbacks
from bot.database import db

load_dotenv()

async def main():
    print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ë–û–¢–ê ===")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    token = os.getenv("BOT_TOKEN")
    if not token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    print(f"‚úÖ BOT_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω: ...{token[-10:]}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenAI
    openai_key = os.getenv("OPENAI_API_KEY")
    if not openai_key:
        print("‚ö†Ô∏è OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø–µ—Ä–µ–≤–æ–¥—ã –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å")
    else:
        print(f"‚úÖ OPENAI_API_KEY –∑–∞–≥—Ä—É–∂–µ–Ω: ...{openai_key[-10:]}")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    bot = Bot(token=token)
    dp = Dispatcher()

    print("\n=== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø HANDLERS ===")

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è handlers
    print("–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º base.router...")
    dp.include_router(base.router)
    print(f"‚úÖ base.router –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. Handlers: {len(base.router._handlers)}")

    print("–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º callbacks.router...")
    dp.include_router(callbacks.router)
    print(f"‚úÖ callbacks.router –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. Handlers: {len(callbacks.router._handlers)}")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\n=== –ë–ê–ó–ê –î–ê–ù–ù–´–• ===")
    await db.init()
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–æ—Ç–∞
    print("\n=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–û–¢–ï ===")
    me = await bot.get_me()
    print(f"‚úÖ –ë–æ—Ç: @{me.username} (ID: {me.id})")

    # –î–æ–±–∞–≤–∏–º –ø—Ä–æ—Å—Ç–æ–π handler –¥–ª—è —Ç–µ—Å—Ç–∞
    @dp.message()
    async def test_handler(message):
        print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message.text}")
        await message.answer("–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π handler —Ä–∞–±–æ—Ç–∞–µ—Ç!")

    print("\n=== –ó–ê–ü–£–°–ö POLLING ===")
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –∏–ª–∏ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
    print("–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")

    try:
        await dp.start_polling(bot)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...")
    finally:
        await bot.session.close()
        await db.close()

if __name__ == "__main__":
    asyncio.run(main())